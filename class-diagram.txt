@startuml

class ApplicationLayer.GraphicInterfaceManager {
	{field} -logged : boolean
	{field} -sc : java.util.Scanner
	{field} -startMenu : boolean
	{method} -clientMenu () : void
	{method} +loginAccount () : void
	{method} +registerAccount () : void
	{method} +startMenu () : void
}


class Context.Client {
	{field} +email : String
	{field} -id : int
	{field} +isPremium : int
	{field} -name : String
	{field} -password : String
	{field} +points : int
	{field} -surname : String
	{field} +telephoneNumber : int
}


class Context.Court {
	{field} -id : int
	{field} -price : float
	{field} -terrain_type : String
	{field} +type : String
	{method} +printAllCourt ( paramFormatter1 : java.util.Formatter , paramboolean2 : boolean ) : void
}


class Context.RentingKit {
	{field} -id : int
	{field} +numOfRents : int
	{field} -type : String
	{field} -unitPrice : float
	{method} +getTotPrice () : float
}


class Context.Reservation {
	{field} +date : java.sql.Date
	{field} -id : int
	{field} +isPremium : int
	{field} +price : float
}


class Context.TimeSlot {
	{field} ~finish_hour : String
	{field} ~start_hour : String
	{field} ~ts : int
	{method} +printAllTimeSlots ( paramFormatter1 : java.util.Formatter ) : void
}


class Context.Wallet {
	{field} -balance : float
	{field} -id : int
	{method} +addMoney ( paramfloat1 : float ) : void
	{method} +removeMoney ( paramfloat1 : float ) : boolean
}


interface Database.ClientDao {
	{method}  {abstract} +deleteTestClient ( paramString1 : String ) : void
	{method}  {abstract} +getClient ( paramString1 : String , paramString2 : String ) : Context.Client
	{method}  {abstract} +getPremiumExpiration ( paramClient1 : Context.Client ) : java.sql.Date
	{method}  {abstract} +insertClient ( paramClient1 : Context.Client ) : int
	{method}  {abstract} +modifyPremium ( paramClient1 : Context.Client ) : boolean
	{method}  {abstract} +modifyPremiumExpiration ( paramClient1 : Context.Client ) : boolean
	{method}  {abstract} +updatePoints ( paramint1 : int , paramClient2 : Context.Client , paramStatement3 : java.sql.Statement ) : void
}


class Database.ClientDaoImpl {
	{field} -db : Database.DatabaseManager
	{method} +deleteTestClient ( paramString1 : String ) : void
	{method} +getClient ( paramString1 : String , paramString2 : String ) : Context.Client
	{method} +getPremiumExpiration ( paramClient1 : Context.Client ) : java.sql.Date
	{method} +insertClient ( paramClient1 : Context.Client ) : int
	{method} +modifyPremium ( paramClient1 : Context.Client ) : boolean
	{method} +modifyPremiumExpiration ( paramClient1 : Context.Client ) : boolean
	{method} +updatePoints ( paramint1 : int , paramClient2 : Context.Client , paramStatement3 : java.sql.Statement ) : void
}


interface Database.CourtDao {
	{method}  {abstract} +getCourt () : java.util.List
}


class Database.CourtDaoImpl {
	{field} -db : Database.DatabaseManager
	{method} +getCourt () : java.util.List
}


interface Database.RentingKitDao {
	{method}  {abstract} +getRentingKit ( paramString1 : String ) : Context.RentingKit
}


class Database.RentingKitDaoImpl {
	{field} -db : Database.DatabaseManager
	{method} +getRentingKit ( paramString1 : String ) : Context.RentingKit
}


interface Database.ReservationDao {
	{method}  {abstract} +checkTestReservation ( paramClient1 : Context.Client , paramDate2 : java.sql.Date ) : boolean
	{method}  {abstract} +deleteReservation ( paramReservation1 : Context.Reservation , paramClient2 : Context.Client ) : boolean
	{method}  {abstract} +getReservationById ( paramint1 : int ) : Context.Reservation
	{method}  {abstract} +getReservationsId ( paramint1 : int ) : java.util.ArrayList
	{method}  {abstract} +makeReservation ( paramReservation1 : Context.Reservation , paramboolean2 : boolean , paramboolean3 : boolean ) : boolean
	{method}  {abstract} +printAllFutureReservations ( paramint1 : int ) : void
	{method}  {abstract} +printAllReservations ( paramint1 : int ) : void
}


class Database.ReservationDaoImpl {
	{field} -db : Database.DatabaseManager
	{method} +checkTestReservation ( paramClient1 : Context.Client , paramDate2 : java.sql.Date ) : boolean
	{method} +deleteReservation ( paramReservation1 : Context.Reservation , paramClient2 : Context.Client ) : boolean
	{method} +getReservationById ( paramint1 : int ) : Context.Reservation
	{method} +getReservationsId ( paramint1 : int ) : java.util.ArrayList
	{method} +makeReservation ( paramReservation1 : Context.Reservation , paramboolean2 : boolean , paramboolean3 : boolean ) : boolean
	{method} +printAllFutureReservations ( paramint1 : int ) : void
	{method} +printAllReservations ( paramint1 : int ) : void
}


interface Database.TimeSlotDao {
	{method}  {abstract} +getTimeSlots ( paramDate1 : java.sql.Date , paramint2 : int ) : java.util.List
}


class Database.TimeSlotDaoImpl {
	{field} -db : Database.DatabaseManager
	{method} +getTimeSlots ( paramDate1 : java.sql.Date , paramint2 : int ) : java.util.List
}


interface Database.WalletDao {
	{method}  {abstract} +getWallet ( paramint1 : int , paramStatement2 : java.sql.Statement ) : Context.Wallet
	{method}  {abstract} +modifyBalance ( paramClient1 : Context.Client , paramStatement2 : java.sql.Statement ) : boolean
}


class Database.WalletDaoImpl {
	{field} -db : Database.DatabaseManager
	{method} +getWallet ( paramint1 : int , paramStatement2 : java.sql.Statement ) : Context.Wallet
	{method} +modifyBalance ( paramClient1 : Context.Client , paramStatement2 : java.sql.Statement ) : boolean
}


class Management.AccountManager {
	{method}  {static} +getDateTimeUTC () : String
	{method}  {static} +isValidEmail ( paramString1 : String ) : boolean
	{method}  {static} +renewPremium ( paramClient1 : Context.Client ) : boolean
	{method}  {static} +sendEmail ( paramString1 : String , paramString2 : String , paramString3 : String ) : void
	{method}  {static} +setIsPremium ( paramClient1 : Context.Client ) : boolean
	{method}  {static} +showPremiumExpiration ( paramClient1 : Context.Client ) : void
	{method}  {static} +updateClient ( paramClient1 : Context.Client ) : Context.Client
}


class Management.GeneralLogging {
	{field} -FILENAME : String
	{field} -fh : java.util.logging.FileHandler
	{field} -file : java.io.File
	{field} ~format : java.text.SimpleDateFormat
	{field} -logger : java.util.logging.Logger
	{method} +log ( paramException1 : Exception ) : void
}


class Management.MailManager {
	{field} {static} +pass : String
	{field} {static} +sender : String
	{method} +createAndSendEmailMessage ( paramString1 : String , paramString2 : String , paramString3 : String ) : boolean
	{method} -sendEmailMessage ( paramMailManager$Email1 : Management.MailManager$Email ) : void
}


class Management.PremiumReservationManager {
	{field} -discount : float
	{method} +makeReservation ( paramReservation1 : Context.Reservation ) : boolean
}


abstract class Management.ReservationManager {
	{field} #giftPoints : int
	{field} #reservationPoints : int
	{method} +deleteReservation ( paramReservation1 : Context.Reservation , paramClient2 : Context.Client ) : boolean
	{method} +getCourt ( paramFormatter1 : java.util.Formatter , paramboolean2 : boolean ) : java.util.List
	{method} +getRentingKit ( paramString1 : String ) : Context.RentingKit
	{method} +getReservationById ( paramint1 : int ) : Context.Reservation
	{method} +getReservationsId ( paramClient1 : Context.Client ) : java.util.ArrayList
	{method} +getTimeSlots ( paramFormatter1 : java.util.Formatter , paramDate2 : java.sql.Date , paramint3 : int ) : java.util.List
	{method}  {abstract} +makeReservation ( paramReservation1 : Context.Reservation ) : boolean
	{method} #makeReservation ( paramReservation1 : Context.Reservation , paramfloat2 : float , paramboolean3 : boolean ) : boolean
	{method} +printAllFutureReservations ( paramClient1 : Context.Client ) : void
	{method} +printAllReservations ( paramClient1 : Context.Client ) : void
}


class Management.StandardReservationManager {
	{method} +makeReservation ( paramReservation1 : Context.Reservation ) : boolean
}


class Management.WalletManager {
	{method} +getWalletBalance ( paramClient1 : Context.Client ) : float
	{method} +topUpWallet ( paramfloat1 : float , paramClient2 : Context.Client ) : boolean
	{method} +withdrawalWallet ( paramfloat1 : float , paramClient2 : Context.Client ) : boolean
}




ApplicationLayer.GraphicInterfaceManager *--  Database.ClientDaoImpl : clientDao
ApplicationLayer.GraphicInterfaceManager *--  Management.WalletManager : walletManager
ApplicationLayer.GraphicInterfaceManager -->  Context.Client : client
Context.Client -->  Context.Wallet : wallet
Context.Client -->  Management.ReservationManager : reservationManager
Context.Reservation -->  Context.Client : client
Context.Reservation -->  Context.Court : court
Context.Reservation -->  Context.RentingKit : rentingKit
Context.Reservation -->  Context.TimeSlot : time_slot
Database.ClientDaoImpl ..|>  Database.ClientDao
Database.CourtDaoImpl ..|>  Database.CourtDao
Database.RentingKitDaoImpl ..|>  Database.RentingKitDao
Database.ReservationDaoImpl ..|>  Database.ReservationDao
Database.TimeSlotDaoImpl ..|>  Database.TimeSlotDao
Database.WalletDaoImpl ..|>  Database.WalletDao
Management.AccountManager *--  Database.ClientDaoImpl : clientDao
Management.AccountManager *--  Management.WalletManager : walletManager
Management.PremiumReservationManager --|>  Management.ReservationManager
Management.ReservationManager *--  Database.CourtDaoImpl : courtDao
Management.ReservationManager *--  Database.RentingKitDaoImpl : rentingKitDao
Management.ReservationManager *--  Database.ReservationDaoImpl : reservationDao
Management.ReservationManager *--  Database.TimeSlotDaoImpl : timeSlotDao
Management.ReservationManager *--  Management.WalletManager : walletManager
Management.StandardReservationManager --|>  Management.ReservationManager
Management.WalletManager *--  Database.WalletDaoImpl : walletDao

hide 

@enduml